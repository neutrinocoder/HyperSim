// --- ECOSYSTEM SPECIES with NEW VISUALS ---
class Tree { constructor(x, y) { this.position = createVector(x,y); this.size=random(10,20); } display() { noStroke(); fill('green'); ellipse(this.position.x,this.position.y,this.size,this.size);}}
class Butterfly extends Animal { constructor(x,y,g) { super(x,y,g); this.maxSpeed=2; this.maxForce=0.1; this.size=8; this.searchRadius=100; } display() { noStroke(); fill('pink'); ellipse(this.position.x, this.position.y, this.size, this.size); }}
class Frog extends Animal { constructor(x,y,g) { super(x,y,g); this.maxSpeed=2.5; this.maxForce=0.2; this.size=12; this.searchRadius=120; } display() { noStroke(); fill('darkgreen'); ellipse(this.position.x, this.position.y, this.size, this.size); }}
class Snake extends Animal { constructor(x,y,g) { super(x,y,g); this.maxSpeed=2; this.maxForce=0.15; this.size=15; this.searchRadius=150; } display() { push(); stroke('yellow'); strokeWeight(4); line(this.position.x, this.position.y, this.position.x - this.velocity.x * this.size, this.position.y - this.velocity.y * this.size); pop(); }}
class Hawk extends Animal { constructor(x,y,g) { super(x,y,g); this.maxSpeed=3.5; this.maxForce=0.25; this.size=12; this.searchRadius=250; } display() { push(); translate(this.position.x,this.position.y); rotate(this.velocity.heading()+PI/2); noStroke(); fill('saddlebrown'); beginShape(); vertex(0, -this.size); vertex(-this.size/2, this.size); vertex(this.size/2, this.size); endShape(CLOSE); pop(); }}
