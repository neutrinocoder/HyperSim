class Plant { constructor(x, y) { this.position = createVector(x,y); this.size=random(5,15); } display() { noStroke(); fill(0,100,0); ellipse(this.position.x,this.position.y,this.size,this.size);}}
class Butterfly extends Animal { constructor(x,y,g) { super(x,y,g); this.baseMaxSpeed=2; this.baseMaxForce=0.1; this.size=8; this.searchRadius=100; this.hungerRate=0; this.maxAge = 14;} isHungry() {return false;} display() { noStroke(); fill('pink'); ellipse(this.position.x, this.position.y, this.size, this.size); this.displayState(); this.displayHoverStats(); }}
class Frog extends Animal { constructor(x,y,g) { super(x,y,g); this.baseMaxSpeed=2.5; this.baseMaxForce=0.2; this.size=12; this.searchRadius=120; this.hungerRate=15; this.hungerThreshold=50; this.maxAge=100; this.maxDaysWithoutFood = 8;} eat() {this.hunger=max(0, this.hunger-60);} display() { noStroke(); fill('darkgreen'); ellipse(this.position.x, this.position.y, this.size, this.size); this.displayState(); this.displayHoverStats(); }}
class Snake extends Animal { constructor(x,y,g) { super(x,y,g); this.baseMaxSpeed=2; this.baseMaxForce=0.15; this.size=15; this.searchRadius=150; this.hungerRate=10; this.hungerThreshold=60; this.maxAge=200; this.maxDaysWithoutFood = 12;} eat(){this.hunger=max(0, this.hunger-80);} display() { push(); stroke('yellow'); strokeWeight(4); let dir=this.velocity.copy().normalize(); line(this.position.x,this.position.y,this.position.x-dir.x*this.size,this.position.y-dir.y*this.size); pop(); this.displayState(); this.displayHoverStats();}}
class Hawk extends Animal { constructor(x,y,g) { super(x,y,g); this.baseMaxSpeed=3.5; this.baseMaxForce=0.25; this.size=12; this.searchRadius=250; this.hungerRate=5; this.hungerThreshold=70; this.maxAge=400; this.maxDaysWithoutFood = 15;} eat(){this.hunger=0;} display() { push(); translate(this.position.x,this.position.y); rotate(this.velocity.heading()+PI/2); noStroke(); fill('saddlebrown'); beginShape(); vertex(0, -this.size); vertex(-this.size/2, this.size); vertex(this.size/2, this.size); endShape(CLOSE); pop(); this.displayState(); this.displayHoverStats();}}
